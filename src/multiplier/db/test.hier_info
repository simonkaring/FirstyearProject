|test
CLK => mult_cell:leftMostCell.clk
CLK => mult_cell:secondCell.clk
CLK => shiftb:BFF0.CLK
CLK => shift_register:RES0.CLK
a[0] => mult_cell:secondCell.A2
a[1] => mult_cell:secondCell.A1
a[2] => mult_cell:leftMostCell.A2
a[3] => mult_cell:leftMostCell.A1
b[0] => shiftb:BFF0.Lin[0]
b[1] => shiftb:BFF0.Lin[1]
b[2] => shiftb:BFF0.Lin[2]
b[3] => shiftb:BFF0.Lin[3]
result[0] <= shift_register:RES0.RES[0]
result[1] <= shift_register:RES0.RES[1]
result[2] <= shift_register:RES0.RES[2]
result[3] <= shift_register:RES0.RES[3]
result[4] <= shift_register:RES0.RES[4]
result[5] <= shift_register:RES0.RES[5]
result[6] <= shift_register:RES0.RES[6]
result[7] <= shift_register:RES0.RES[7]


|test|mult_cell:leftMostCell
A1 => n1.IN1
A2 => n2.IN0
Bin => n2.IN1
Bin => dflipflop:flipflopB.d
B <> B
Sin => fulladder:fullAdder1.b
Sout <= dflipflop:flipflopS.q
clk => dflipflop:flipflopB.clk
clk => dflipflop:flipflopC1.clk
clk => dflipflop:flipflopC2.clk
clk => dflipflop:flipflopS.clk


|test|mult_cell:leftMostCell|dflipflop:flipflopB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopC1
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|fullAdder:fullAdder1
a => s.IN0
a => c_out.IN0
b => s.IN1
b => c_out.IN1
c_in => s.IN1
c_in => c_out.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c_out <= c_out.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|fullAdder:fullAdder2
a => s.IN0
a => c_out.IN0
b => s.IN1
b => c_out.IN1
c_in => s.IN1
c_in => c_out.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c_out <= c_out.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell
A1 => n1.IN1
A2 => n2.IN0
Bin => n2.IN1
Bin => dflipflop:flipflopB.d
B <> B
Sin => fulladder:fullAdder1.b
Sout <= dflipflop:flipflopS.q
clk => dflipflop:flipflopB.clk
clk => dflipflop:flipflopC1.clk
clk => dflipflop:flipflopC2.clk
clk => dflipflop:flipflopS.clk


|test|mult_cell:secondCell|dflipflop:flipflopB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopC1
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|fullAdder:fullAdder1
a => s.IN0
a => c_out.IN0
b => s.IN1
b => c_out.IN1
c_in => s.IN1
c_in => c_out.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c_out <= c_out.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|fullAdder:fullAdder2
a => s.IN0
a => c_out.IN0
b => s.IN1
b => c_out.IN1
c_in => s.IN1
c_in => c_out.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
c_out <= c_out.DB_MAX_OUTPUT_PORT_TYPE


|test|shiftB:BFF0
Lin[0] => Mux0.IN3
Lin[1] => Mux0.IN2
Lin[2] => Mux0.IN1
Lin[3] => Mux0.IN0
Bout <= Bout~reg0.DB_MAX_OUTPUT_PORT_TYPE
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
CLK => i[4].CLK
CLK => i[5].CLK
CLK => i[6].CLK
CLK => i[7].CLK
CLK => i[8].CLK
CLK => i[9].CLK
CLK => i[10].CLK
CLK => i[11].CLK
CLK => i[12].CLK
CLK => i[13].CLK
CLK => i[14].CLK
CLK => i[15].CLK
CLK => i[16].CLK
CLK => i[17].CLK
CLK => i[18].CLK
CLK => i[19].CLK
CLK => i[20].CLK
CLK => i[21].CLK
CLK => i[22].CLK
CLK => i[23].CLK
CLK => i[24].CLK
CLK => i[25].CLK
CLK => i[26].CLK
CLK => i[27].CLK
CLK => i[28].CLK
CLK => i[29].CLK
CLK => i[30].CLK
CLK => i[31].CLK
CLK => Bout~reg0.CLK


|test|shift_register:RES0
d => dflipflop:flip0.d
CLK => dflipflop:flip0.clk
CLK => dflipflop:floop:6:FFi.clk
CLK => dflipflop:floop:5:FFi.clk
CLK => dflipflop:floop:4:FFi.clk
CLK => dflipflop:floop:3:FFi.clk
CLK => dflipflop:floop:2:FFi.clk
CLK => dflipflop:floop:1:FFi.clk
CLK => dflipflop:floop:0:FFi.clk
RES[0] <= dflipflop:floop:0:FFi.q
RES[1] <= dflipflop:floop:1:FFi.q
RES[2] <= dflipflop:floop:2:FFi.q
RES[3] <= dflipflop:floop:3:FFi.q
RES[4] <= dflipflop:floop:4:FFi.q
RES[5] <= dflipflop:floop:5:FFi.q
RES[6] <= dflipflop:floop:6:FFi.q
RES[7] <= dflipflop:flip0.q


|test|shift_register:RES0|dflipflop:flip0
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:6:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:5:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:4:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:3:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:2:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:1:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:0:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


